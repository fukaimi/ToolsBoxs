import{u as F,i as T}from"./action-282deb75.js";import{A,aq as E,bi as L,aA as y,bu as R,k as j,be as z,o as f,x as s,bj as D,p as h,a$ as n,F as H,aF as u,aG as N,as as k,bl as S}from"./history-7dbe2ade.js";import"./shim-03580cdb.js";import"./_commonjsHelpers-87174ba5.js";const q={style:{display:"grid","grid-template-columns":"1fr 5px 1fr","grid-column-gap":"10px","margin-top":"5px"},class:"ctool-page-option"},G={style:{display:"grid","grid-template-columns":"120px 1fr","grid-column-gap":"5px"}},M=h("span",{style:{display:"flex","justify-content":"center","align-items":"center"}},"|",-1),O=A({__name:"Bcrypt",async setup(P){let c,m;const p=new Worker(new URL(""+new URL("worker-a18a2e47.js",import.meta.url).href,self.location),{type:"module"});E(()=>{p.terminate()});const e=F(([c,m]=L(()=>T({input:"",rounds:10,hash:"",check_result:null},{paste:!1})),c=await c,m(),c));let i=y(!1),d=y(!1);p.onmessage=function(r){const t=r.data;if(console.log("main accept",t),t.method==="hash")return b(t.data.err,t.data.hash);if(t.method==="compare")return x(t.data.err,t.data.res)};const _=(r,t)=>{let o={method:r,data:t};console.log("main send",o),p.postMessage(o)},$=()=>{if(e.current.input!==""){if(e.current.rounds<4||e.current.rounds>30)throw new Error($t("bcrypt_rounds_range",[4,30]));i.value=!0,_("hash",{input:e.current.input,rounds:e.current.rounds})}},b=(r,t)=>{if(i.value=!1,r)throw new Error(r.message);e.current.hash=t,e.current.check_result=null,e.success({copy_text:e.current.hash})},w=()=>{e.current.input===""||e.current.hash===""||(d.value=!0,_("compare",{input:e.current.input,hash:e.current.hash}))},x=(r,t)=>{d.value=!1,e.current.check_result=t;const o=e.current.check_result?$t("bcrypt_check_result_success"):$t("bcrypt_check_result_error");e.success({message:`${$t("bcrypt_check")} ${o}`,message_type:e.current.check_result?"success":"error"})},v=R.range(4,33).map(r=>({label:`${$t("bcrypt_rounds")} ${r}`,value:r})),V=j(()=>e.current.check_result===null?$t("bcrypt_check"):`${$t("bcrypt_check")} (${e.current.check_result?$t("bcrypt_check_result_success"):$t("bcrypt_check_result_error")})`);return z(()=>({input:e.current.input,hash:e.current.hash}),()=>{e.current.check_result=null}),(r,t)=>{const o=u("Textarea"),C=u("HeightResize"),B=u("Select"),g=u("Button"),U=N("row");return k(),f(H,null,[s(C,{append:[".ctool-page-option"]},{default:D(({height:l})=>[S((k(),f("div",null,[s(o,{height:l,modelValue:n(e).current.input,"onUpdate:modelValue":t[0]||(t[0]=a=>n(e).current.input=a),"float-text":r.$t("bcrypt_password"),placeholder:r.$t("bcrypt_password"),onClickFloatText:t[1]||(t[1]=a=>r.$copy(n(e).current.input))},null,8,["height","modelValue","float-text","placeholder"]),s(o,{height:l,modelValue:n(e).current.hash,"onUpdate:modelValue":t[2]||(t[2]=a=>n(e).current.hash=a),"float-text":r.$t("bcrypt_hash"),placeholder:r.$t("bcrypt_hash"),onClickFloatText:t[3]||(t[3]=a=>r.$copy(n(e).current.hash))},null,8,["height","modelValue","float-text","placeholder"])])),[[U,"1-1"]])]),_:1},8,["append"]),h("div",q,[h("div",G,[s(B,{modelValue:n(e).current.rounds,"onUpdate:modelValue":t[4]||(t[4]=l=>n(e).current.rounds=l),options:n(v)},null,8,["modelValue","options"]),s(g,{loading:i.value,onClick:$,type:"primary",long:"",text:r.$t("bcrypt_generate")},null,8,["loading","text"])]),M,s(g,{loading:d.value,onClick:w,type:"primary",long:"",text:V.value},null,8,["loading","text"])])],64)}}});export{O as default};

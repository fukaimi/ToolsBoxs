{"version":3,"sources":["webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./src/api/main.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/isarray/index.js"],"names":["exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","ipcApiRoute","test","messageShow","messageShowConfirm","selectFolder","openDirectory","loadViewContent","removeViewContent","createWindow","sendNotification","initPowerMonitor","getScreen","openSoftware","autoLaunch","setTheme","getTheme","checkForUpdater","downloadApp","dbOperation","sqlitedbOperation","favoriteUrlOperation","dataConfigOperation","uploadFile","checkHttpServer","doHttpRequest","doSocketRequest","ipcInvokeMsg","ipcSendSyncMsg","ipcSendMsg","getWCid","startJavaServer","closeJavaServer","hello","specialIpcRoute","appUpdater","window1ToWindow2","window2ToWindow1","requestHttp","uri","parameter","config","storage","get","host","server","url","split","console","request","method","data","params","timeout","base64","ieee754","isArray","typedArraySupport","__proto__","prototype","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","this","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isnan","type","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","module"],"mappings":"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","file":"js/chunk-8cf37860.85d09c54.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import storage from 'store2'\r\nimport request from '@/utils/request'\r\n\r\n/**\r\n * 路由定义（主进程与渲染进程通信频道定义）\r\n */\r\nconst ipcApiRoute = {\r\n  test: 'controller.example.test',\r\n  messageShow: 'controller.example.messageShow',\r\n  messageShowConfirm: 'controller.example.messageShowConfirm',\r\n  selectFolder: 'controller.example.selectFolder',\r\n  openDirectory: 'controller.example.openDirectory',\r\n  loadViewContent: 'controller.example.loadViewContent',\r\n  removeViewContent: 'controller.example.removeViewContent',\r\n  createWindow: 'controller.example.createWindow',\r\n  sendNotification: 'controller.example.sendNotification',\r\n  initPowerMonitor: 'controller.example.initPowerMonitor',\r\n  getScreen: 'controller.example.getScreen',\r\n  openSoftware: 'controller.example.openSoftware',\r\n  autoLaunch: 'controller.example.autoLaunch',\r\n  setTheme: 'controller.example.setTheme',\r\n  getTheme: 'controller.example.getTheme',\r\n  checkForUpdater: 'controller.example.checkForUpdater',\r\n  downloadApp: 'controller.example.downloadApp',\r\n  dbOperation: 'controller.example.dbOperation',\r\n  sqlitedbOperation: 'controller.example.sqlitedbOperation',\r\n  favoriteUrlOperation: 'controller.favorite.sqlitedbOperation',\r\n  dataConfigOperation: 'controller.dataConfig.sqlitedbOperation',\r\n  uploadFile: 'controller.example.uploadFile',\r\n  checkHttpServer: 'controller.example.checkHttpServer',\r\n  doHttpRequest: 'controller.example.doHttpRequest',\r\n  doSocketRequest: 'controller.example.doSocketRequest',\r\n  ipcInvokeMsg: 'controller.example.ipcInvokeMsg',\r\n  ipcSendSyncMsg: 'controller.example.ipcSendSyncMsg',\r\n  ipcSendMsg: 'controller.example.ipcSendMsg',\r\n  getWCid: 'controller.example.getWCid',\r\n  startJavaServer: 'controller.example.startJavaServer',\r\n  closeJavaServer: 'controller.example.closeJavaServer',\r\n  hello: 'controller.example.hello',\r\n}\r\n\r\n/**\r\n * 特殊的路由（频道）定义\r\n */\r\nconst specialIpcRoute = {\r\n  appUpdater: 'app.updater', // 此频道在后端也有相同定义\r\n  window1ToWindow2: 'window1-to-window2', // 窗口之间通信\r\n  window2ToWindow1: 'window2-to-window1', // 窗口之间通信\r\n}\r\n\r\n/**\r\n * 访问内置http服务\r\n */\r\nconst requestHttp = (uri, parameter) => {\r\n  // url转换\r\n  const config = storage.get('httpServiceConfig');\r\n  const host = config.server || 'http://127.0.0.1:7071';\r\n  let url = uri.split('.').join('/');\r\n  url = host + '/' + url;\r\n  console.log('url:', url);\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data: parameter, // body\r\n    params: {}, // URL 参数\r\n    timeout: 60000,\r\n  })\r\n}\r\n\r\nexport {\r\n  ipcApiRoute,\r\n  specialIpcRoute,\r\n  requestHttp,\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}
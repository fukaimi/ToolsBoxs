{"version":3,"sources":["webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///./src/views/base/socket/SocketServer.vue","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js","webpack:///src/views/base/socket/SocketServer.vue","webpack:///./src/views/base/socket/SocketServer.vue?28c2","webpack:///./src/views/base/socket/SocketServer.vue?d1fb","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///./src/views/base/socket/SocketServer.vue?92c3","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/@socket.io/component-emitter/index.mjs"],"names":["isReactNative","navigator","product","toLowerCase","WS","opts","super","this","supportsBinary","forceBase64","check","uri","protocols","extraHeaders","headers","ws","err","emitReserved","binaryType","socket","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onClose","description","context","onmessage","ev","onData","data","onerror","e","onError","packets","writable","i","length","packet","lastPacket","options","compress","perMessageDeflate","len","Buffer","byteLength","threshold","send","setTimeoutFn","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","ipv6","hostname","indexOf","path","globalThisShim","self","window","Function","alphabet","split","map","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","render","_vm","_c","_self","attrs","_m","staticClass","_v","_s","currentStatus","servicAddress","on","$event","sendRequest","staticRenderFns","value","XMLHttpRequest","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","xhr","responseType","polling","location","isSSL","protocol","xd","xs","poll","onPause","readyState","pause","total","once","doPoll","callback","type","onPacket","forEach","write","doWrite","sid","Object","assign","fn","req","request","method","xhrStatus","bind","pollXhr","async","undefined","create","xscheme","open","setDisableHeaderCheck","hasOwnProperty","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","transports","websocket","re","parts","parse","str","src","b","substring","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","obj","regx","names","slice","splice","$0","$1","$2","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","removeAllListeners","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","reason","failed","onTransportOpen","msg","upgrading","flush","Error","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","off","l","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","clearTimeoutFn","getWritablePackets","shouldCheckPayloadSize","payloadSize","push","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j","url","loc","charAt","test","href","withNativeArrayBuffer","ArrayBuffer","isView","buffer","prototype","toString","withNativeBlob","Blob","call","withNativeFile","File","isBinary","hasBinary","toJSON","Array","isArray","arguments","key","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","reviver","reconstructor","decodeString","isBinaryEvent","base64","takeBinaryData","p","start","buf","c","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","args","emit","apply","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","Promise","resolve","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listeners","listener","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","keys","_close","encodedPackets","delay","onreconnect","attempt","cache","lookup","parsed","newConnection","forceNew","multiplex","Manager","Socket","mounted","init","methods","console","log","$message","ipcApiRoute","doSocketRequest","cmd","params","response","component","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodePacket","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","Uint8Array","charCodeAt","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decodePacket","encodedPacket","mapBinary","decodeBase64Packet","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","count","decodePayload","encodedPayload","decodedPacket","TransportError","Transport","doOpen","doClose","details","nextTick","isPromiseAvailable","cb","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","BASE64_OVERHEAD","utf8Length","ceil","size","Emitter","mixin","event","_callbacks","callbacks","hasListeners"],"mappings":"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","file":"js/chunk-70dcb494.f27db027.js","sourcesContent":["import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app-base-httpserver\"}},[_vm._m(0),_c('div',{staticClass:\"one-block-2\"},[_c('a-space',[_c('p',[_vm._v(\"* 状态：\"+_vm._s(_vm.currentStatus))])]),_c('p',[_vm._v(\"* 地址：\"+_vm._s(_vm.servicAddress))])],1),_vm._m(1),_c('div',{staticClass:\"one-block-2\"},[_c('a-space',[_c('a-button',{on:{\"click\":function($event){return _vm.sendRequest('downloads')}}},[_vm._v(\" 打开【我的下载】 \")])],1)],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"one-block-1\"},[_c('span',[_vm._v(\" 1. 内置socket-io server服务 \")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"one-block-1\"},[_c('span',[_vm._v(\" 2. 发送请求 \")])])\n}]\n\nexport { render, staticRenderFns }","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","<template>\r\n  <div id=\"app-base-httpserver\">\r\n    <div class=\"one-block-1\">\r\n      <span>\r\n        1. 内置socket-io server服务\r\n      </span>\r\n    </div>\r\n    <div class=\"one-block-2\">\r\n      <a-space>\r\n        <p>* 状态：{{ currentStatus }}</p>\r\n      </a-space>\r\n      <p>* 地址：{{ servicAddress }}</p>\r\n    </div>\r\n    <div class=\"one-block-1\">\r\n      <span>\r\n        2. 发送请求\r\n      </span>\r\n    </div>    \r\n    <div class=\"one-block-2\">\r\n      <a-space>\r\n        <a-button @click=\"sendRequest('downloads')\"> 打开【我的下载】 </a-button>\r\n      </a-space>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { io } from 'socket.io-client'\r\nimport { ipcApiRoute, requestHttp } from '@/api/main'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentStatus: '关闭',\r\n      servicAddress: 'ws://127.0.0.1:7070'\r\n    };\r\n  },\r\n  mounted () {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init () {\r\n      const self = this;\r\n      this.socket = io(this.servicAddress);\r\n      this.socket.on('connect', () => {\r\n        console.log('connect!!!!!!!!');\r\n        self.currentStatus = '开启';\r\n      });\r\n    },\r\n    sendRequest (id) {\r\n      if (this.currentStatus == '关闭') {\r\n        this.$message.error('socketio服务未开启');\r\n        return;\r\n      }\r\n\r\n      const method = ipcApiRoute.doSocketRequest; \r\n      this.socket.emit('c1', { cmd: method, params: {id: id} }, (response) => {\r\n        // response为返回值\r\n        console.log('response:', response)\r\n      });\r\n    },  \r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n#app-base-httpserver {\r\n  padding: 0px 10px;\r\n  text-align: left;\r\n  width: 100%;\r\n  .one-block-1 {\r\n    font-size: 16px;\r\n    padding-top: 10px;\r\n  }\r\n  .one-block-2 {\r\n    padding-top: 10px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SocketServer.vue?vue&type=template&id=2fd3de39&scoped=true&\"\nimport script from \"./SocketServer.vue?vue&type=script&lang=js&\"\nexport * from \"./SocketServer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SocketServer.vue?vue&type=style&index=0&id=2fd3de39&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2fd3de39\",\n  null\n  \n)\n\nexport default component.exports","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./SocketServer.vue?vue&type=style&index=0&id=2fd3de39&prod&lang=less&scoped=true&\"","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"],"sourceRoot":""}
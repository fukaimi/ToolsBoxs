{"version":3,"sources":["webpack:///./src/views/tools/bulb/index.vue?3ba0","webpack:///src/views/tools/bulb/index.vue","webpack:///./src/api/main.js","webpack:///./src/views/tools/bulb/index.vue","webpack:///./src/views/tools/bulb/index.vue?2470","webpack:///./src/views/tools/bulb/index.vue?bb53"],"names":["data","spinning","formsource","visible2","kzt","txt","isUpdate","resourceLis","resourceUrl","visible","created","initScene","methods","self","params","action","info","scene","$ipcInvoke","ipcApiRoute","dataConfigOperation","then","res","result","length","ressource","eval","alldata","kztChange","e","memo","JSON","stringify","delData","data_id","$message","success","initData","testSelect","start","target","selectionStart","end","selectionEnd","value","console","log","selectVal","slice","showModal","formInline","data_value","data_desc","closeModal","showModal2","handleOk","handleSubmit","data_key","data_memo","post","url","sqlStr","token","code","error","message","columns","data1","data1Element","key","Object","keys","column","title","dataIndex","ellipsis","push","finalData","i","description","handleChange","handleBlur","handleFocus","filterOption","input","option","componentOptions","children","text","toLowerCase","indexOf","test","messageShow","delWindows","messageShowConfirm","selectFolder","openDirectory","loadViewContent","removeViewContent","createWindow","sendNotification","initPowerMonitor","getScreen","openSoftware","autoLaunch","setTheme","getTheme","checkForUpdater","downloadApp","dbOperation","sqlitedbOperation","favoriteUrlOperation","uploadFile","checkHttpServer","doHttpRequest","doSocketRequest","ipcInvokeMsg","ipcSendSyncMsg","ipcSendMsg","getWCid","startJavaServer","closeJavaServer","hello","specialIpcRoute","appUpdater","window1ToWindow2","window2ToWindow1","requestHttp","uri","parameter","config","storage","get","host","server","split","join","request","method","timeout","render","_vm","this","_c","_self","attrs","staticStyle","staticClass","on","model","callback","$$v","expression","staticRenderFns","component"],"mappings":"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","file":"js/chunk-4b6815f2.6b375215.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=65f3078c&prod&scoped=true&lang=css&\"","<template>\r\n  <div>\r\n    <a-spin :spinning=\"spinning\">\r\n      <div style=\"text-align: left;height: 100vh\">\r\n        <a-textarea\r\n          v-model=\"kzt\"\r\n          class=\"bg\"\r\n          placeholder=\"\"\r\n          :row=\"10\"\r\n          :minRows=\"10\"\r\n          style=\"{font-size: 22px;}\"\r\n          @change=\"kztChange\"\r\n          @select=\"testSelect\"/>\r\n      </div>\r\n    </a-spin>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {ipcApiRoute} from \"@/api/main\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      spinning: false,\r\n      formsource: {},\r\n      visible2: false,\r\n      kzt: '',\r\n      txt: '',\r\n      isUpdate: false,\r\n      resourceLis: [],\r\n      resourceUrl: '',\r\n      visible: false\r\n    };\r\n  },\r\n  created() {\r\n    this.initScene()\r\n  },\r\n  methods: {\r\n    initScene() {//场景初始化\r\n      const self = this;\r\n      const params = {\r\n        action: 'getSceneTemp',\r\n        info: {\r\n          scene: 'BULB'\r\n        }\r\n      }\r\n      this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n        if (res.result.length === 0) {\r\n          this.isUpdate = false\r\n          return;\r\n        }\r\n        let ressource = eval('(' + res.result[0].alldata + ')')\r\n        this.resourceUrl = ressource.resourceUrl\r\n        this.kzt = ressource.kzt\r\n        this.isUpdate = true\r\n      })\r\n    },\r\n    kztChange(e) {\r\n      const kzt = this.kzt\r\n      const resourceUrl = this.resourceUrl\r\n      let info = {\r\n        scene: \"BULB\",\r\n        memo: '草稿',\r\n        alldata: JSON.stringify({kzt: kzt, resourceUrl: resourceUrl})\r\n      }\r\n      if (this.isUpdate) {//更新\r\n        const params = {\r\n          action: 'updateSceneTemp',\r\n          info: info\r\n        }\r\n        this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n          if (res.result) {\r\n            this.isUpdate = true\r\n            return;\r\n          }\r\n        })\r\n      } else {//新增\r\n        const params = {\r\n          action: 'addSceneTemp',\r\n          info: info\r\n        }\r\n        this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n          if (res.result) {\r\n            this.isUpdate = true\r\n            return;\r\n          }\r\n\r\n        })\r\n      }\r\n\r\n    },\r\n    delData(data_id) {\r\n      const self = this;\r\n      const params = {\r\n        action: 'delDataConfig',\r\n        info: {\r\n          data_id: data_id\r\n        }\r\n      }\r\n      this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n        if (res.result) {\r\n          self.$message.success(`删除成功`);\r\n          this.initData()\r\n          this.resourceUrl = ''\r\n          return;\r\n        }\r\n        self.$message.success(`删除失败`);\r\n      })\r\n    },\r\n    testSelect(e) {\r\n      let start = e.target.selectionStart;\r\n      let end = e.target.selectionEnd;\r\n      let value = e.target.value;\r\n      console.log(e.target.selectionStart, e.target.selectionEnd, e.target.value);\r\n\r\n      let selectVal = \"\";\r\n      if (value && end != 0) { //防止 没选中\r\n        selectVal = value.slice(start, end);\r\n      }\r\n      console.log(selectVal)\r\n      this.txt = selectVal;\r\n    },\r\n    showModal() {\r\n      this.formInline = {\r\n        data_value: 'http://',\r\n        data_desc: '',\r\n      }\r\n      this.visible = true;\r\n    },\r\n    closeModal() {\r\n      this.visible2 = false;\r\n      this.visible = false;\r\n    },\r\n    showModal2() {\r\n      this.visible2 = true;\r\n    },\r\n    handleOk(e) {\r\n      console.log(e);\r\n      this.handleSubmit(e)\r\n      this.visible = false;\r\n    },\r\n    handleSubmit(e) {\r\n      console.log(this.formInline);\r\n      if (!this.formInline.data_desc) {\r\n        return\r\n      }\r\n      const self = this;\r\n      const params = {\r\n        action: 'addDataConfig',\r\n        info: {\r\n          ...this.formInline,\r\n          data_key: 'MYSQL_API_URL',\r\n          data_memo: 'mysql数据源',\r\n        }\r\n      }\r\n      this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n        if (res.result) {\r\n          self.$message.success(`新增成功`);\r\n          this.initData()\r\n          return;\r\n        }\r\n        self.$message.success(`新增失败`);\r\n      })\r\n    },\r\n    post() {\r\n      this.spinning = true\r\n      const self = this;\r\n      const params = {\r\n        action: 'POST',\r\n        data: {\r\n          url: this.resourceUrl,\r\n          sqlStr: this.txt,\r\n          token: this.token,\r\n        }\r\n      }\r\n      this.$ipcInvoke(ipcApiRoute.dataConfigOperation, params).then(res => {\r\n        if (res.result.code === 0) {\r\n          self.$message.success(`执行成功`);\r\n          this.spinning = false\r\n          this.columns = []\r\n          const columnall = []\r\n          let data1 = res.result.data;\r\n          let data1Element = {}\r\n          if (data1) {\r\n            data1Element = data1[0];\r\n            for (let key of Object.keys(data1Element)) {\r\n              console.log(key);\r\n              let column = {\r\n                title: key,\r\n                dataIndex: key,\r\n                ellipsis: true\r\n              }\r\n              this.columns.push(column)\r\n            }\r\n            this.columns.push({title: 'description', dataIndex: 'description', ellipsis: true})\r\n\r\n            const finalData = []\r\n            for (let i = 0; i < data1.length; i++) {\r\n              data1[i].description = JSON.stringify(data1[i])\r\n              finalData.push(data1[i])\r\n            }\r\n            this.data = finalData\r\n          }\r\n          return;\r\n        }\r\n        this.spinning = false\r\n        self.$message.error(res.result.message);\r\n      })\r\n    },\r\n    handleChange(value) {\r\n      console.log(`selected ${value}`);\r\n    },\r\n    handleBlur() {\r\n      console.log('blur');\r\n    },\r\n    handleFocus() {\r\n      console.log('focus');\r\n    },\r\n    filterOption(input, option) {\r\n      return (\r\n          option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bg{\r\n  background-color: #FAFAFA;\r\n  background-image: linear-gradient(90deg, #FAFAFA 0%, #74EBD5 44%, #9FACE6 100%);\r\n  height: 100vh\r\n}\r\n</style>\r\n","import storage from 'store2'\r\nimport request from '@/utils/request'\r\n\r\n/**\r\n * 路由定义（主进程与渲染进程通信频道定义）\r\n */\r\nconst ipcApiRoute = {\r\n  test: 'controller.example.test',\r\n  messageShow: 'controller.example.messageShow',\r\n  delWindows: 'controller.example.delWindows',\r\n  messageShowConfirm: 'controller.example.messageShowConfirm',\r\n  selectFolder: 'controller.example.selectFolder',\r\n  openDirectory: 'controller.example.openDirectory',\r\n  loadViewContent: 'controller.example.loadViewContent',\r\n  removeViewContent: 'controller.example.removeViewContent',\r\n  createWindow: 'controller.example.createWindow',\r\n  sendNotification: 'controller.example.sendNotification',\r\n  initPowerMonitor: 'controller.example.initPowerMonitor',\r\n  getScreen: 'controller.example.getScreen',\r\n  openSoftware: 'controller.example.openSoftware',\r\n  autoLaunch: 'controller.example.autoLaunch',\r\n  setTheme: 'controller.example.setTheme',\r\n  getTheme: 'controller.example.getTheme',\r\n  checkForUpdater: 'controller.example.checkForUpdater',\r\n  downloadApp: 'controller.example.downloadApp',\r\n  dbOperation: 'controller.example.dbOperation',\r\n  sqlitedbOperation: 'controller.example.sqlitedbOperation',\r\n  favoriteUrlOperation: 'controller.favorite.sqlitedbOperation',\r\n  dataConfigOperation: 'controller.dataConfig.sqlitedbOperation',\r\n  uploadFile: 'controller.example.uploadFile',\r\n  checkHttpServer: 'controller.example.checkHttpServer',\r\n  doHttpRequest: 'controller.example.doHttpRequest',\r\n  doSocketRequest: 'controller.example.doSocketRequest',\r\n  ipcInvokeMsg: 'controller.example.ipcInvokeMsg',\r\n  ipcSendSyncMsg: 'controller.example.ipcSendSyncMsg',\r\n  ipcSendMsg: 'controller.example.ipcSendMsg',\r\n  getWCid: 'controller.example.getWCid',\r\n  startJavaServer: 'controller.example.startJavaServer',\r\n  closeJavaServer: 'controller.example.closeJavaServer',\r\n  hello: 'controller.example.hello',\r\n}\r\n\r\n/**\r\n * 特殊的路由（频道）定义\r\n */\r\nconst specialIpcRoute = {\r\n  appUpdater: 'app.updater', // 此频道在后端也有相同定义\r\n  window1ToWindow2: 'window1-to-window2', // 窗口之间通信\r\n  window2ToWindow1: 'window2-to-window1', // 窗口之间通信\r\n}\r\n\r\n/**\r\n * 访问内置http服务\r\n */\r\nconst requestHttp = (uri, parameter) => {\r\n  // url转换\r\n  const config = storage.get('httpServiceConfig');\r\n  const host = config.server || 'http://127.0.0.1:7071';\r\n  let url = uri.split('.').join('/');\r\n  url = host + '/' + url;\r\n  console.log('url:', url);\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data: parameter, // body\r\n    params: {}, // URL 参数\r\n    timeout: 60000,\r\n  })\r\n}\r\n\r\nexport {\r\n  ipcApiRoute,\r\n  specialIpcRoute,\r\n  requestHttp,\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('a-spin',{attrs:{\"spinning\":_vm.spinning}},[_c('div',{staticStyle:{\"text-align\":\"left\",\"height\":\"100vh\"}},[_c('a-textarea',{staticClass:\"bg\",staticStyle:{\"{font-size\":\"22px\"},attrs:{\"placeholder\":\"\",\"row\":10,\"minRows\":10},on:{\"change\":_vm.kztChange,\"select\":_vm.testSelect},model:{value:(_vm.kzt),callback:function ($$v) {_vm.kzt=$$v},expression:\"kzt\"}})],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=65f3078c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=65f3078c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"65f3078c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}